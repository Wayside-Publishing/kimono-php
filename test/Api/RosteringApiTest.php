<?php
/**
 * RosteringApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Kimono
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Interop Data API
 *
 * Interop Data APIs provide access to the data objects and events from Interop Cloud repositories and Integration repositories
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Kimono\Test\Api;

use \Kimono\Configuration;
use \Kimono\ApiException;
use \Kimono\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * RosteringApiTest Class Doc Comment
 *
 * @category Class
 * @package  Kimono
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class RosteringApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for findCourse
     *
     * Find a Course by $sys.id.
     *
     */
    public function testFindCourse()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findLEA
     *
     * Find an LEA-type Org by $sys.id.
     *
     */
    public function testFindLEA()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findOrg
     *
     * Find an Org by $sys.id.
     *
     */
    public function testFindOrg()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findPerson
     *
     * Find a Person by $sys.id.
     *
     */
    public function testFindPerson()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findSection
     *
     * Find a Section by $sys.id.
     *
     */
    public function testFindSection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findTerm
     *
     * Find a Term by $sys.id.
     *
     */
    public function testFindTerm()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listCourses
     *
     * List all Courses.
     *
     */
    public function testListCourses()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listCoursesForOrg
     *
     * List Courses that belong to an Org.
     *
     */
    public function testListCoursesForOrg()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listLEAs
     *
     * List all LEA-type Orgs.
     *
     */
    public function testListLEAs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listOrgs
     *
     * List all Orgs.
     *
     */
    public function testListOrgs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listPersons
     *
     * Get all Persons.
     *
     */
    public function testListPersons()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listSchools
     *
     * List all School-type Orgs.
     *
     */
    public function testListSchools()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listSections
     *
     * List all Sections.
     *
     */
    public function testListSections()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listSectionsForOrg
     *
     * List Sections that belong to an Org.
     *
     */
    public function testListSectionsForOrg()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listStudents
     *
     * List all Student-type Persons.
     *
     */
    public function testListStudents()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listStudentsForOrg
     *
     * List Students that are members of an Org.
     *
     */
    public function testListStudentsForOrg()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTeachers
     *
     * List all Teacher-type Persons.
     *
     */
    public function testListTeachers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTeachersForOrg
     *
     * List Teachers that are members of an Org.
     *
     */
    public function testListTeachersForOrg()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTerms
     *
     * List all Terms.
     *
     */
    public function testListTerms()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTermsForOrg
     *
     * List Terms that belong to an Org.
     *
     */
    public function testListTermsForOrg()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
